@model ComicsMore.Models.UserViewModel
@using Microsoft.AspNet.Identity

@{
    ViewBag.Title = Model.Profile.UserName;
}

<h2>@ViewBag.Title</h2>
<div class="row">
    <div class="col-md-8">
        <section id="loginForm">
            @using (Html.BeginForm(new { @class = "form-horizontal", role = "form" }))
            {
                <div class="form-group">
                    <div class="col-md-4">
                        <img src="@Model.Profile.ProfileImage" class="img-rounded"
                             alt="" width="200" height="200" />
                    </div>
                </div>
                <div class="form-group">
                    <p class="col-md-6">@Model.Profile.About</p>
                </div>
                if ((User.Identity.GetUserId() == Model.Profile.Id) || (User.IsInRole("Admin")))
                {
                    <div class="form-group">
                        @*TODO: Move button down.*@
                        <div class="col-md-2">
                            <a href="@Url.Action("EditProfile", new { name = Model.Profile.UserName })">
                                <input type="button" value="@Resources.Profile.EditProfile" class="btn btn-info" />
                            </a>
                        </div>
                    </div>
                }
                if (Model.Medals != null)
                {
                    foreach (var medal in Model.Medals)
                    {
                        <img src="@medal.ImageUrl" alt="@medal.Name" width="30" height="30" title="@medal.Contidion" />
                        <p>@medal.Name</p>
                    }
                }

            }


        </section>
    </div>
</div>
<div id="comments-block">
    <div id="add-comment">
        <label for="comment-for">@Resources.Profile.Comments</label>
        <textarea class="form-control" id="body" name="body" placeholder="@Resources.Profile.CommentPlaceholder"></textarea>
        <button id="addComment" class="btn btn-default">@Resources.Profile.AddComment</button>
    </div>
    @if (Model.Comments != null)
    {
        foreach (var comment in Model.Comments.Reverse())
        {
            <div class="comments" comment-id="@comment.Id">

                @Html.ActionLink(comment.Author.UserName, "UserProfile")
                @if ((User.Identity.GetUserId() == comment.Author.Id) || (User.IsInRole("Admin")))
                {
                    //Html.BeginForm("DeleteComment", "Profile", )
                    <button class="comment-delete btn btn-default">&#10005;</button>
                }
                <p>@comment.Body</p>
                <p>@comment.Time.ToString("dd MMMM") @Resources.Profile.At @comment.Time.ToString("h:mm tt").ToLower()</p>
            </div>
        }
    }
</div>
@Styles.Render("~/bundles/bootstrap")
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/app-script")

<script>
    $(".comment-delete").click(function () {
        var commentId = $(".comments").attr("comment-id");
        jQuery.ajax({
            traditional: true,
            type: "POST",
            url: '@Url.Action("DeleteComment", "Profile")',
            data: JSON.stringify({ commentId: commentId }),
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                $(".comments[comment-id = " + data + "]").remove();
            },
            error: function () {
                alert("cannot delete comment")
            }
        });

    });

    $("#addComment").click(function () {
        var commentBody = $("#body").val();
        var name = '@User.Identity.Name';

        $.ajax({
            type: "POST",
            url: '@Url.Action("AddComment", "Profile")',
            data: JSON.stringify({ commentBody: commentBody, name: name }),
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            error: function () {
                location.reload();
            }
        })
    })
</script>